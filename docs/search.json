[{"path":"https://kevin-m-kent.github.io/youtubeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2023). youtubeR: Package (Title Case). R package version 0.1.0, https://kevin-m-kent.github.io/youtubeR/.","code":"@Manual{,   title = {youtubeR: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2023},   note = {R package version 0.1.0},   url = {https://kevin-m-kent.github.io/youtubeR/}, }"},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"youtube-r","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"package interacting Youtube Data API. Right now, just uploading local videos finding status uploaded videos. goal figure non-interactively, currently package interactive workflow.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"retrieving-video-status-oauth2-manual-workflow","dir":"","previous_headings":"","what":"Retrieving Video Status (oauth2 manual workflow)","title":"What the Package Does (Title Case)","text":"goal get video status (finished processing) video uploaded. need create google client httr2 oauth2 object first. order work, need setup environment variables YOUTUBE_CLIENT_ID YOUTUBE_CLIENT_SECRET. used complete request. workflow follows: Create google client Get playlist ids playlist, get video ids video, get status","code":"library(youtubeR)  google_client <- construct_client() my_playlist_id <- get_playlist_ids(google_client)   video_ids <- purrr::map(my_playlist_id, get_video_ids, client = google_client)  video_details <- purrr::map(video_ids, get_video_status, client = google_client)"},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"uploading-videos-oauth2-manual-workflow","dir":"","previous_headings":"","what":"Uploading Videos (oauth2 manual workflow)","title":"What the Package Does (Title Case)","text":"Following similar workflow, can also upload videos youtube. Assuming already created client , need snippet video path. snippet defines title, description, metadata video. video path path video file local machine. See Youtube Data API documentation information snippet object.","code":"library(jsonlite)  snippet <- list(snippet = list(\"title\" = unbox(\"video test\"),                     \"description\" = unbox(\"description_test\"),                     \"tags\" = \"kevin,kent\"), status = list(\"privacyStatus\" = unbox(\"private\"),             \"selfDeclaredMadeForKids\" = unbox(\"false\")))  video_path <- \"path/to/video.mp4\"  upload_video(google_client, snippet, video_path)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Client — construct_client","title":"Construct Client — construct_client","text":"Builds oauth client object google apis.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Client — construct_client","text":"","code":"construct_client(token_url = \"https://oauth2.googleapis.com/token\")"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Client — construct_client","text":"token_url Google's oauth url","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Client — construct_client","text":"httr2 oauth client object","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Client — construct_client","text":"Requires following environment variables: YOUTUBE_CLIENT_ID, YOUTUBE_CLIENT_SECRET","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/construct_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Client — construct_client","text":"","code":"google_client <- construct_client()"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Playlist Ids — get_playlist_ids","title":"Get Playlist Ids — get_playlist_ids","text":"Retrieves upload playlist ids.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Playlist Ids — get_playlist_ids","text":"","code":"get_playlist_ids(   client,   token_url = \"https://oauth2.googleapis.com/token\",   auth_url = \"https://accounts.google.com/o/oauth2/v2/auth\",   scope = \"https://www.googleapis.com/auth/youtube\" )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Playlist Ids — get_playlist_ids","text":"client httr2 oauth2 client google api token_url google's oauth2 token url auth_url google's oauth2 auth url scope token scope, default youtube","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Playlist Ids — get_playlist_ids","text":"list playlist ids uploads","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Playlist Ids — get_playlist_ids","text":"","code":"google_client <- construct_client()  playlist_ids <- get_playlist_ids(google_client) #> Error in oauth_flow_check(\"authorization code\", client, interactive = TRUE): OAuth 2.0 authorization code flow requires an interactive session"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Video Ids — get_video_ids","title":"Get Video Ids — get_video_ids","text":"Retrieves video ids particular playlist.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Video Ids — get_video_ids","text":"","code":"get_video_ids(   playlist_id,   client,   token_url = \"https://oauth2.googleapis.com/token\",   auth_url = \"https://accounts.google.com/o/oauth2/v2/auth\",   scope = \"https://www.googleapis.com/auth/youtube\" )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Video Ids — get_video_ids","text":"playlist_id id retrieved get_playlist_id client httr2 oauth2 client google apis token_url google's oauth2 token url auth_url google's oauth2 auth url scope token scope, default youtube","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Video Ids — get_video_ids","text":"list video ids","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Video Ids — get_video_ids","text":"","code":"#'google_client <- construct_client()  playlist_ids <- get_playlist_ids(google_client) #> Error in httr2::req_oauth_auth_code(req, client = client, auth_url = auth_url,     scope = scope, pkce = FALSE, auth_params = list(scope = scope,         response_type = \"code\"), token_params = list(scope = scope,         grant_type = \"authorization_code\"), host_name = \"localhost\",     host_ip = \"127.0.0.1\", port = 8080, ): object 'google_client' not found  video_ids <- purrr::map(my_playlist_id, get_video_ids, client = my_client) #> Error in purrr::map(my_playlist_id, get_video_ids, client = my_client): object 'my_playlist_id' not found"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Video Status — get_video_status","title":"Get Video Status — get_video_status","text":"Retrieves processing details list videos","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Video Status — get_video_status","text":"","code":"get_video_status(   video_ids,   client,   token_url = \"https://oauth2.googleapis.com/token\",   auth_url = \"https://accounts.google.com/o/oauth2/v2/auth\",   scope = \"https://www.googleapis.com/auth/youtube\" )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Video Status — get_video_status","text":"video_ids list video ids client httr2 oauth2 client google api token_url google's oauth2 token url auth_url google's oauth2 auth url scope token scope, default youtube","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Video Status — get_video_status","text":"list processing details (processingStatus probably interest)","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Video Status — get_video_status","text":"","code":"google_client <- construct_client()  my_playlist_id <- get_playlist_ids(google_client) #> Error in oauth_flow_check(\"authorization code\", client, interactive = TRUE): OAuth 2.0 authorization code flow requires an interactive session video_ids <- purrr::map(my_playlist_id, get_video_ids, client = google_client) #> Error in purrr::map(my_playlist_id, get_video_ids, client = google_client): object 'my_playlist_id' not found video_details <- purrr::map(video_ids, get_video_status, client = google_client) #> Error in purrr::map(video_ids, get_video_status, client = google_client): object 'video_ids' not found"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a video to youtube — upload_video","title":"Upload a video to youtube — upload_video","text":"Takes client video file path uploads video youtube. returns video id.ß","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a video to youtube — upload_video","text":"","code":"upload_video(   client,   snippet,   video_path,   scope = \"https://www.googleapis.com/auth/youtube\",   token_url = \"https://oauth2.googleapis.com/token\",   auth_url = \"https://accounts.google.com/o/oauth2/v2/auth\" )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a video to youtube — upload_video","text":"token_url Google's oauth url","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a video to youtube — upload_video","text":"httr2 oauth client object","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a video to youtube — upload_video","text":"Requires following environment variables: YOUTUBE_CLIENT_ID, YOUTUBE_CLIENT_SECRET","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/upload_video.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a video to youtube — upload_video","text":"","code":"google_client <- construct_client()  snippet <- list(snippet = list(\"title\" = unbox(\"video kids test\"),                        \"description\" = unbox(\"description_test\"),                        \"tags\" = \"kevin,kent\"),  status = list(\"privacyStatus\" = unbox(\"private\"),               \"selfDeclaredMadeForKids\" = unbox(\"false\")))  #> Error in unbox(\"video kids test\"): could not find function \"unbox\"  video_path <- \"my_video.mp4\"  upload_video(google_client, snippet, video_path) #> Error in force(x): object 'snippet' not found"}]
