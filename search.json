[{"path":"https://kevin-m-kent.github.io/youtubeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 youtubeR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Kent. Author, maintainer. Jon Harmon. Author.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kent K, Harmon J (2024). youtubeR: Interface YouTube API. R package version 0.0.0.9001, https://github.com/kevin-m-kent/youtubeR, https://kevin-m-kent.github.io/youtubeR/.","code":"@Manual{,   title = {youtubeR: An Interface to the YouTube API},   author = {Kevin Kent and Jon Harmon},   year = {2024},   note = {R package version 0.0.0.9001,     https://github.com/kevin-m-kent/youtubeR},   url = {https://kevin-m-kent.github.io/youtubeR/}, }"},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"youtuber","dir":"","previous_headings":"","what":"An Interface to the YouTube API","title":"An Interface to the YouTube API","text":"package interacting Youtube Data API. package developed first aid processing R4DS Online Learning Community book club videos. , functionality focused needed task. Long-term, hope implement entire YouTube API.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Interface to the YouTube API","text":"Install development version youtubeR GitHub:","code":"# install.packages(\"pak\") pak::pak(\"kevin-m-kent/youtubeR\")"},{"path":[]},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"step-1-create-an-oauth-20-client","dir":"","previous_headings":"Setting up","what":"Step 1: Create an OAuth 2.0 client.","title":"An Interface to the YouTube API","text":"’ll add details settings apply client. ’ll need enable YouTube Data API v3.","code":"library(youtubeR)  browse_gc_credentials() # Copy the client id and client secret."},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"step-2-set-up-environment-variables","dir":"","previous_headings":"Setting up","what":"Step 2: Set up environment variables","title":"An Interface to the YouTube API","text":"","code":"# Use the values copied above. Sys.setenv(YOUTUBE_CLIENT_ID = \"12345-ab12c.apps.googleusercontent.com\") Sys.setenv(YOUTUBE_CLIENT_SECRET = \"ABCD-eFg_H\") # Ideally, set these in your .Renviron file."},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"step-3-use-the-package","dir":"","previous_headings":"Setting up","what":"Step 3: Use the package","title":"An Interface to the YouTube API","text":"now set call functions package. first time call function interactively, asked authorize client act behalf (web browser).","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"retrieving-video-status","dir":"","previous_headings":"","what":"Retrieving Video Status","title":"An Interface to the YouTube API","text":"goal get video status (finished processing) video uploaded. workflow follows: Get playlist ids playlist, get video ids video, get status","code":"my_playlist_id <- get_upload_playlist_id() video_ids <- get_playlist_video_ids(my_playlist_id) video_details <- get_video_processing_details(video_ids)"},{"path":"https://kevin-m-kent.github.io/youtubeR/index.html","id":"uploading-videos","dir":"","previous_headings":"","what":"Uploading Videos","title":"An Interface to the YouTube API","text":"Following similar workflow, can also upload videos youtube. Assuming already created client , need snippet video path. snippet defines title, description, metadata video. video path path video file local machine.","code":"snippet <- yt_schema_video_snippet(   title = \"video test\",   description = \"description of this test video\",   tags = c(\"example tag\", \"another tag\") ) status <- yt_schema_video_status(   privacy_status = \"private\",   self_declared_made_for_kids = FALSE ) video_path <- \"path/to/video.mp4\"  yt_videos_insert(   video_path = video_path,   snippet = snippet,   status = status )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/browse_gc_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Visit Google Cloud Credentials page — browse_gc_credentials","title":"Visit Google Cloud Credentials page — browse_gc_credentials","text":"Launch Google Cloud \"Credentials\" page (can configure OAuth 2.0 Clients). configure client, copy/paste Client ID Client Secret YOUTUBE_CLIENT_ID YOUTUBE_CLIENT_SECRET environment variables. recommend placing environment variables .Renviron file.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/browse_gc_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visit Google Cloud Credentials page — browse_gc_credentials","text":"","code":"browse_gc_credentials()"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/browse_gc_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visit Google Cloud Credentials page — browse_gc_credentials","text":"url \"Credentials\" page, invisibly.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/browse_gc_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visit Google Cloud Credentials page — browse_gc_credentials","text":"","code":"gc_credentials_url <- browse_gc_credentials() # Copy/paste values from your client. Sys.setenv(YOUTUBE_CLIENT_ID = \"12345-ab12c.apps.googleusercontent.com\") Sys.setenv(YOUTUBE_CLIENT_SECRET = \"ABCD-eFg_H\")"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Datetime vectors — datetime","title":"Datetime vectors — datetime","text":"Create object type \"POSIXct\". function used provide length-0 placeholder value function definitions.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datetime vectors — datetime","text":"","code":"datetime()"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Datetime vectors — datetime","text":"length-0 POSIXct object.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Datetime vectors — datetime","text":"","code":"datetime() #> POSIXct of length 0"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-add_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the body to the request — .add_body","title":"Add the body to the request — .add_body","text":"Add body request","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-add_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the body to the request — .add_body","text":"","code":".add_body(request, body)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-add_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the body to the request — .add_body","text":"request rest request. body optional list parameters pass body portion request.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-add_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the body to the request — .add_body","text":"request body appropriately added.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Discard empty elements — .compact","title":"Discard empty elements — .compact","text":"Discard empty elements nested lists.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discard empty elements — .compact","text":"","code":".compact(lst, depth = 1, max_depth = 20)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-compact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discard empty elements — .compact","text":"lst (nested) list filter. depth current recursion depth. max_depth maximum recursion depth.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-compact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discard empty elements — .compact","text":"list, minus empty elements branches.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-format_used_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Stringify the names of a list — .format_used_names","title":"Stringify the names of a list — .format_used_names","text":"Stringify names list","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-format_used_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stringify the names of a list — .format_used_names","text":"","code":".format_used_names(lst)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-format_used_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stringify the names of a list — .format_used_names","text":"lst named list object. object compacted, names remaining components returned, comma-separated list.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-format_used_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stringify the names of a list — .format_used_names","text":"comma-separated character, \",\".","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-get_token_noninteractive.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a YouTube OAuth token if possible — .get_token_noninteractive","title":"Retrieve a YouTube OAuth token if possible — .get_token_noninteractive","text":"Retrieve YouTube OAuth token possible","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-get_token_noninteractive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a YouTube OAuth token if possible — .get_token_noninteractive","text":"","code":".get_token_noninteractive(client, refresh_token = NULL)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-get_token_noninteractive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a YouTube OAuth token if possible — .get_token_noninteractive","text":"client YouTube OAuth client created yt_construct_client(). refresh_token refresh token associated client.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-get_token_noninteractive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a YouTube OAuth token if possible — .get_token_noninteractive","text":"YouTube OAuth token, NULL.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-new_youtube_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a youtube_response — .new_youtube_response","title":"Construct a youtube_response — .new_youtube_response","text":"Construct youtube_response","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-new_youtube_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a youtube_response — .new_youtube_response","text":"","code":".new_youtube_response(response_data)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-new_youtube_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a youtube_response — .new_youtube_response","text":"response_data data portion response httr2::resp_body_json().","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-new_youtube_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a youtube_response — .new_youtube_response","text":"object additional class \"youtube_response\", NULL.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-parse_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the returned response — .parse_response","title":"Parse the returned response — .parse_response","text":"Parse returned response","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-parse_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the returned response — .parse_response","text":"","code":".parse_response(response)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-parse_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the returned response — .parse_response","text":"response raw response returned YouTube api.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-parse_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the returned response — .parse_response","text":"youtube_response list object.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the body of a call — .prepare_body","title":"Prepare the body of a call — .prepare_body","text":"Prepare body call","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the body of a call — .prepare_body","text":"","code":".prepare_body(body, mime_type = NULL)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the body of a call — .prepare_body","text":"body object use body request. component body path, pass fs::path() otherwise give class \"fs_path\" indicate path. mime_type character scalar indicating mime type files present body. APIs ok leaving NULL guess.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare the body of a call — .prepare_body","text":"prepared body list object \"json\" \"multipart\" subclass.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body_part.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a multipart body part — .prepare_body_part","title":"Prepare a multipart body part — .prepare_body_part","text":"Prepare multipart body part","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body_part.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a multipart body part — .prepare_body_part","text":"","code":".prepare_body_part(body_part, mime_type = NULL)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body_part.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a multipart body part — .prepare_body_part","text":"body_part One piece multipart body. mime_type character scalar indicating mime type files present body. APIs ok leaving NULL guess.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_body_part.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a multipart body part — .prepare_body_part","text":"character raw vector post.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine request pieces — .prepare_request","title":"Combine request pieces — .prepare_request","text":"Combine request pieces","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine request pieces — .prepare_request","text":"","code":".prepare_request(   endpoint,   query = NULL,   body = NULL,   method = NULL,   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL,   base_url = c(\"basic\", \"upload\", \"resumable_upload\") )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine request pieces — .prepare_request","text":"endpoint path endpoint. Optionally, list path plus variables glue::glue() path. query optional list parameters pass query portion request. body optional list parameters pass body portion request. method method something GET POST, supply . Case ignored. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible. base_url family URLs use. Almost everything use default basic URL.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-prepare_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine request pieces — .prepare_request","text":"request ready perform.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-remove_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove missing arguments — .remove_missing","title":"Remove missing arguments — .remove_missing","text":"Remove missing arguments","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-remove_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove missing arguments — .remove_missing","text":"","code":".remove_missing(arg_list)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-remove_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove missing arguments — .remove_missing","text":"arg_list list arguments, wrapped rlang::maybe_missing().","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-remove_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove missing arguments — .remove_missing","text":"list without missing parameters.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-str2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Smush a string to a comma-separated list — .str2csv","title":"Smush a string to a comma-separated list — .str2csv","text":"Smush string comma-separated list","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-str2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smush a string to a comma-separated list — .str2csv","text":"","code":".str2csv(string)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-str2csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smush a string to a comma-separated list — .str2csv","text":"string character vector smush.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-str2csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smush a string to a comma-separated list — .str2csv","text":"character scalar like \",\".","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_refresh_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Refresh a YouTube OAuth token — .yt_refresh_token","title":"Refresh a YouTube OAuth token — .yt_refresh_token","text":"Refresh YouTube OAuth token","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_refresh_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refresh a YouTube OAuth token — .yt_refresh_token","text":"","code":".yt_refresh_token(client, refresh_token = NULL)"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_refresh_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refresh a YouTube OAuth token — .yt_refresh_token","text":"client YouTube OAuth client created yt_construct_client(). refresh_token refresh token associated client.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_refresh_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refresh a YouTube OAuth token — .yt_refresh_token","text":"YouTube OAuth token, NULL.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_req_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"YouTube OAuth authentication — .yt_req_auth","title":"YouTube OAuth authentication — .yt_req_auth","text":"function main way authentication handled package. tries find token non-interactively possible, bothers user necessary.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_req_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"YouTube OAuth authentication — .yt_req_auth","text":"","code":".yt_req_auth(   request,   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_req_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"YouTube OAuth authentication — .yt_req_auth","text":"request httr2::request(). client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/dot-yt_req_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"YouTube OAuth authentication — .yt_req_auth","text":"httr2::request() oauth authentication information.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_my_channel_detail_playlist_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","title":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","text":"Get ids playlists contain details content channel.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_my_channel_detail_playlist_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","text":"","code":"get_my_channel_detail_playlist_ids(   client = yt_construct_client(),   cache_disk = getOption(\"yt_cache_disk\", FALSE),   cache_key = getOption(\"yt_cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_my_channel_detail_playlist_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","text":"client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_my_channel_detail_playlist_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","text":"contentDetails object encapsulates information channel's content.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_my_channel_detail_playlist_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get my channel detail playlist ids — get_my_channel_detail_playlist_ids","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() get_my_channel_details() }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Get playlist items — get_playlist_items","title":"Get playlist items — get_playlist_items","text":"Retrieve list items given playlist.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get playlist items — get_playlist_items","text":"","code":"get_playlist_items(   playlist_id,   max_results = 100,   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get playlist items — get_playlist_items","text":"playlist_id ID playlist. max_results maximum number results return. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get playlist items — get_playlist_items","text":"list videos, videoId videoPublishedAt.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get playlist items — get_playlist_items","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() get_playlist_items(playlist_id = get_upload_playlist_id()) }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_video_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get playlist video ids — get_playlist_video_ids","title":"Get playlist video ids — get_playlist_video_ids","text":"Retrieves video ids particular playlist.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_video_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get playlist video ids — get_playlist_video_ids","text":"","code":"get_playlist_video_ids(   playlist_id,   max_results = 100,   client = yt_construct_client(),   cache_disk = getOption(\"yt_cache_disk\", FALSE),   cache_key = getOption(\"yt_cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_video_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get playlist video ids — get_playlist_video_ids","text":"playlist_id ID playlist. max_results maximum number results return. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_video_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get playlist video ids — get_playlist_video_ids","text":"character vector video ids.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_playlist_video_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get playlist video ids — get_playlist_video_ids","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() get_playlist_video_ids(playlist_id = get_upload_playlist_id()) }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_upload_playlist_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Playlist Ids — get_upload_playlist_id","title":"Get Playlist Ids — get_upload_playlist_id","text":"Retrieves upload playlist ids.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_upload_playlist_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Playlist Ids — get_upload_playlist_id","text":"","code":"get_upload_playlist_id(   client = yt_construct_client(),   cache_disk = getOption(\"yt_cache_disk\", FALSE),   cache_key = getOption(\"yt_cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_upload_playlist_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Playlist Ids — get_upload_playlist_id","text":"client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_upload_playlist_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Playlist Ids — get_upload_playlist_id","text":"list playlist ids uploads","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_upload_playlist_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Playlist Ids — get_upload_playlist_id","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() get_upload_playlist_id() }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_processing_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get video processing details — get_video_processing_details","title":"Get video processing details — get_video_processing_details","text":"Retrieves processing details vector video IDs","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_processing_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get video processing details — get_video_processing_details","text":"","code":"get_video_processing_details(   video_ids,   client = yt_construct_client(),   cache_disk = getOption(\"yt_cache_disk\", FALSE),   cache_key = getOption(\"yt_cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_processing_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get video processing details — get_video_processing_details","text":"video_ids character vector video ids. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_processing_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get video processing details — get_video_processing_details","text":"list processing status details. processingStatus probably interest","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/get_video_processing_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get video processing details — get_video_processing_details","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() get_upload_playlist_id() |>   get_playlist_items() |>   get_video_processing_details() }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/youtubeR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"youtubeR: An Interface to the YouTube API — youtubeR-package","title":"youtubeR: An Interface to the YouTube API — youtubeR-package","text":"Manage YouTube videos R.","code":""},{"path":[]},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/youtubeR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"youtubeR: An Interface to the YouTube API — youtubeR-package","text":"Maintainer: Kevin Kent kentmkevin@gmail.com Authors: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_authenticate.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with a YouTube OAuth client — yt_authenticate","title":"Authenticate with a YouTube OAuth client — yt_authenticate","text":"Load generate YouTube OAuth token use functions package. primary use function cache values early script (user can walk away). Otherwise functions package prompt authentication needed. values cached, rest package use default client.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_authenticate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with a YouTube OAuth client — yt_authenticate","text":"","code":"yt_authenticate(   client = yt_construct_client(),   force = FALSE,   refresh_token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_authenticate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with a YouTube OAuth client — yt_authenticate","text":"client YouTube OAuth client created yt_construct_client(). force logical indicating whether force refresh token. refresh_token refresh token associated client. parameter exists primarily testing. wish provide refresh token (example, automated processes), recommend setting YOUTUBE_REFRESH_TOKEN environment variable.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_authenticate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with a YouTube OAuth client — yt_authenticate","text":"YouTube OAuth token, invisibly.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_authenticate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate with a YouTube OAuth client — yt_authenticate","text":"","code":"if (FALSE) { # yt_has_client_envvars() && interactive() token <- yt_authenticate() }"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_call_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Call the YouTube API — yt_call_api","title":"Call the YouTube API — yt_call_api","text":"use function, please open issue youtubeR GitHub repository describing use case. intend wrap endpoints function necessary users.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_call_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call the YouTube API — yt_call_api","text":"","code":"yt_call_api(   endpoint,   query = NULL,   body = NULL,   method = NULL,   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL,   base_url = c(\"basic\", \"upload\", \"resumable_upload\") )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_call_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call the YouTube API — yt_call_api","text":"endpoint path endpoint. Optionally, list path plus variables glue::glue() path. query optional list parameters pass query portion request. body optional list parameters pass body portion request. method method something GET POST, supply . Case ignored. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible. base_url family URLs use. Almost everything use default basic URL.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_call_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call the YouTube API — yt_call_api","text":"result call.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_construct_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a YouTube OAuth client — yt_construct_client","title":"Construct a YouTube OAuth client — yt_construct_client","text":"Builds OAuth client object google apis.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_construct_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a YouTube OAuth client — yt_construct_client","text":"","code":"yt_construct_client(   client_id = Sys.getenv(\"YOUTUBE_CLIENT_ID\"),   client_secret = Sys.getenv(\"YOUTUBE_CLIENT_SECRET\") )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_construct_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a YouTube OAuth client — yt_construct_client","text":"client_id Google Cloud OAuth 2.0 client ID. recommend save environment variable, YOUTUBE_CLIENT_ID. client_secret Google Cloud OAuth 2.0 client secret. recommend save environment variable, YOUTUBE_CLIENT_SECRET.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_construct_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a YouTube OAuth client — yt_construct_client","text":"httr2::oauth_client() object.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_construct_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a YouTube OAuth client — yt_construct_client","text":"","code":"client <- yt_construct_client()"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_has_client_envvars.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for YouTube client environment variables — yt_has_client_envvars","title":"Check for YouTube client environment variables — yt_has_client_envvars","text":"Reports whether YouTube client environment variables set (, arguments provided, check characters).","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_has_client_envvars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for YouTube client environment variables — yt_has_client_envvars","text":"","code":"yt_has_client_envvars(   client_id = Sys.getenv(\"YOUTUBE_CLIENT_ID\"),   client_secret = Sys.getenv(\"YOUTUBE_CLIENT_SECRET\") )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_has_client_envvars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for YouTube client environment variables — yt_has_client_envvars","text":"client_id Google Cloud OAuth 2.0 client ID. recommend save environment variable, YOUTUBE_CLIENT_ID. client_secret Google Cloud OAuth 2.0 client secret. recommend save environment variable, YOUTUBE_CLIENT_SECRET.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_has_client_envvars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for YouTube client environment variables — yt_has_client_envvars","text":"logical indicating whether variables available.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_has_client_envvars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for YouTube client environment variables — yt_has_client_envvars","text":"","code":"yt_has_client_envvars() #> [1] TRUE yt_has_client_envvars(\"an_id_string\", \"a_secret_string\") #> [1] TRUE"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_localization.html","id":null,"dir":"Reference","previous_headings":"","what":"Video localization — yt_schema_video_localization","title":"Video localization — yt_schema_video_localization","text":"Localized versions certain video properties (e.g. title).","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_localization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Video localization — yt_schema_video_localization","text":"","code":"yt_schema_video_localization(description = character(), title = character())"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_localization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Video localization — yt_schema_video_localization","text":"description (character scalar) Localized version video's description. title (character scalar) Localized version video's title.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_localization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Video localization — yt_schema_video_localization","text":"list non-zero-length properties.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_localization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Video localization — yt_schema_video_localization","text":"","code":"yt_schema_video_localization() #> named list() yt_schema_video_localization(description = \"A description.\") #> $description #> [1] \"A description.\" #>"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_snippet.html","id":null,"dir":"Reference","previous_headings":"","what":"Video snippet — yt_schema_video_snippet","title":"Video snippet — yt_schema_video_snippet","text":"Basic details video, including title, description, uploader, thumbnails category.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_snippet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Video snippet — yt_schema_video_snippet","text":"","code":"yt_schema_video_snippet(   title = character(),   description = character(),   tags = character(),   category_id = character(),   default_language = character() )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_snippet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Video snippet — yt_schema_video_snippet","text":"title (character scalar) video's title. description (character scalar) video's description. tags (character vector) list keyword tags associated video. Tags may contain spaces. category_id (character scalar) YouTube video category associated video. default_language (character scalar) language videos's default snippet.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_snippet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Video snippet — yt_schema_video_snippet","text":"list non-zero-length properties.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_snippet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Video snippet — yt_schema_video_snippet","text":"","code":"yt_schema_video_snippet() #> named list() yt_schema_video_snippet(title = \"An example video\", tags = c(\"a\", \"b\")) #> $title #> [1] \"An example video\" #>  #> $tags #> [1] \"a\" \"b\" #>"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Video status — yt_schema_video_status","title":"Video status — yt_schema_video_status","text":"status object contains information video's uploading, processing, privacy statuses.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Video status — yt_schema_video_status","text":"","code":"yt_schema_video_status(   embeddable = logical(),   license = character(),   privacy_status = character(),   public_stats_viewable = logical(),   publish_at = datetime(),   self_declared_made_for_kids = logical() )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Video status — yt_schema_video_status","text":"embeddable (logical) value indicates video can embedded another website. license (factor scalar) video's license. values: youtube, creativeCommon privacy_status (factor scalar) video's privacy status. values: public, unlisted, private public_stats_viewable (logical) value indicates extended video statistics watch page can viewed everyone. Note view count, likes, etc still visible disabled. publish_at (datetime scalar) date time video scheduled publish. can set privacy status video private. self_declared_made_for_kids (logical) Whether video made kids.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Video status — yt_schema_video_status","text":"list non-zero-length properties.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_schema_video_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Video status — yt_schema_video_status","text":"","code":"yt_schema_video_status() #> named list() yt_schema_video_status(embeddable = TRUE) #> $embeddable #> [1] TRUE #>"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete video — yt_videos_delete","title":"Delete video — yt_videos_delete","text":"Deletes resource.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete video — yt_videos_delete","text":"","code":"yt_videos_delete(   video_id,   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete video — yt_videos_delete","text":"video_id (character scalar) id parameter specifies YouTube video ID resource deleted. video resource, id property specifies video's ID. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete video — yt_videos_delete","text":"id deleted video.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert video — yt_videos_insert","title":"Insert video — yt_videos_insert","text":"Inserts new resource collection.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert video — yt_videos_insert","text":"","code":"yt_videos_insert(   video_path,   snippet = yt_schema_video_snippet(),   localizations = list(),   status = yt_schema_video_status(),   recording_date = datetime(),   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert video — yt_videos_insert","text":"video_path (character scalar) Path video file upload. snippet Basic details video, including title, description, uploader, thumbnails category. See yt_schema_video_snippet() details. localizations list named localizations objects. localizations object contains localized versions basic details video, title description. name valid language key, BCP-47 language code. See yt_schema_video_localization() details format localization. status Basic details video category, localized title. See yt_schema_video_status() details. recording_date (datetime scalar) date time video recorded. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert video — yt_videos_insert","text":"id uploaded video.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update video — yt_videos_update","title":"Update video — yt_videos_update","text":"Updates existing resource.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update video — yt_videos_update","text":"","code":"yt_videos_update(   video_id,   snippet = yt_schema_video_snippet(),   localizations = list(),   status = yt_schema_video_status(),   recording_date = datetime(),   client = yt_construct_client(),   cache_disk = getOption(\"youtuberR.cache_disk\", FALSE),   cache_key = getOption(\"youtuberR.cache_key\", NULL),   token = NULL )"},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update video — yt_videos_update","text":"video_id (character scalar) id parameter specifies YouTube video ID resource updated video resource, id property specifies video's ID. snippet Basic details video, including title, description, uploader, thumbnails category. See yt_schema_video_snippet() details. localizations list named localizations objects. localizations object contains localized versions basic details video, title description. name valid language key, BCP-47 language code. See yt_schema_video_localization() details format localization. status Basic details video category, localized title. See yt_schema_video_status() details. recording_date (datetime scalar) date time video recorded. client YouTube OAuth client created yt_construct_client(). cache_disk access token cached disk? reduces number times need re-authenticate cost storing access credentials disk. Learn https://httr2.r-lib.org/articles/oauth.html. cache_key authenticating multiple users using client, use key differentiate users. token YouTube API OAuth token, access_token string token. recommend instead supply client, case appropriate token located possible.","code":""},{"path":"https://kevin-m-kent.github.io/youtubeR/reference/yt_videos_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update video — yt_videos_update","text":"id updated video.","code":""}]
